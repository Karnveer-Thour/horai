{
    "name": "api-user",
    "version": "0.0.1",
    "description": "",
    "main": "index.js",
    "engines": {
        "node": ">=20",
        "npm": ">=10"
    },
    "scripts": {
        "generate:openapi:server": "openapi-generator-cli generate -g nodejs-express-server -i ./openapi.yaml -o ./generated && rm -rf ./src/adapters/controllers/openapi/generated && mv ./generated ./src/adapters/controllers/openapi/",
        "generate:openapi:typedefinition": "dtsgen -o src/adapters/controllers/openapi/typings/schema.d.ts ./openapi.yaml && echo \"export $(cat src/adapters/controllers/openapi/typings/schema.d.ts)\" > src/adapters/controllers/openapi/typings/schema.d.ts",
        "generate:openapi": "openapi-examples-validator openapi.yaml && npm run generate:openapi:server && npm run generate:openapi:typedefinition && npm run format",
        "generate:prisma": "prisma generate",
        "connect:db": "docker exec -it horai_user_db psql -U postgres",
        "build": "copyfiles ./src/**/*.yaml build && copyfiles ./*.conf build && npx prisma generate && tsc",
        "serve:db": "docker run --rm --name horai_user_db -p 5432:5432 -e POSTGRES_PASSWORD=horai -d postgres 2>/dev/null || exit 0",
        "setup-env:testing": "echo 'PAYMENT_SERVICE_URL=http://localhost:3000\nDATABASE_URL=postgresql://postgres:horai@localhost:5432/user?schema=public\nHORAI_INTERNAL_HEADER_SECRET_KEY=younerverknow\nHORAI_MODE=develop\nTESTING_MOCKING_ENABLE=true' > .env",
        "setup-env:local": "echo 'PAYMENT_SERVICE_URL=http://localhost:3000\nDATABASE_URL=postgresql://postgres:horai@localhost:5432/user?schema=public\nHORAI_INTERNAL_HEADER_SECRET_KEY=younerverknow\nHORAI_MODE=develop' > .env",
        "serve:testing-app": "npm run setup-env:testing && ts-node src/adapters/controllers/openapi/routes/index.js",
        "serve:app": "npm run setup-env:local && ts-node src/adapters/controllers/openapi/routes/index.js",
        "serve:app-only": "ts-node src/adapters/controllers/openapi/routes/index.js",
        "serve": "npm run setup-env:local && npm run serve:db & npm-watch generate:openapi & prisma generate --watch & npx prisma migrate dev & npm-watch build & prisma migrate dev && npm run serve:app",
        "format:code": "eslint \"*/**/*.{ts,js}\" --fix && prettier \"**/*.{js,ts}\" --write",
        "format:yaml": "prettier \"**/*.{yaml,yml}\" --parser yaml --write --tab-width 2",
        "format:json": "prettier \"**/*.json\" --parser json --write",
        "format:md": "prettier \"**/*.md\" --parser markdown --write",
        "format:prisma": "prisma format",
        "format": "npm run format:code && npm run format:yaml && npm run format:json && npm run format:md && npm run format:prisma",
        "test": "jest --runInBand --watch",
        "production:serve": "npm run build && npx prisma migrate deploy && node build/src/adapters/controllers/openapi/routes/index.js",
        "report": "JEST_JUNIT_OUTPUT_DIR=./reports/junit JEST_HTML_REPORTER_OUTPUT_PATH=./reports/html/test-report.html jest --collect-coverage --ci --runInBand --reporters=default --reporters=jest-junit --reporters=jest-html-reporter",
        "start": "prisma migrate deploy && node build/src/adapters/controllers/openapi/routes/index.js",
        "import-data": "ts-node -r dotenv/config tools/data-import-runner/adapters/controllers/cli/DataImportRunner.ts",
        "prisma:reset": "prisma migrate reset",
        "migrate": "prisma migrate deploy",
        "prisma:create-migration": "prisma migrate dev --name $npm_config_name",
        "prisma:create-migration-only": "prisma migrate dev --create-only --name $npm_config_name",
        "gcp-build": ""
    },
    "watch": {
        "build": {
            "patterns": ["src", "package.json"],
            "extensions": "ts,js"
        },
        "generate:openapi": {
            "patterns": ["openapi.yaml"],
            "extensions": "yaml"
        }
    },
    "repository": {
        "type": "git",
        "url": "git+https://github.com/scheme-verge-inc/horai.git"
    },
    "author": "",
    "license": "ISC",
    "bugs": {
        "url": "https://github.com/scheme-verge-inc/horai/issues"
    },
    "homepage": "https://github.com/scheme-verge-inc/horai#readme",
    "dependencies": {
        "@prisma/client": "^5.4.2",
        "@types/moment": "^2.13.0",
        "axios": "^0.21.1",
        "bcrypt": "^5.0.1",
        "body-parser": "^1.19.0",
        "camelcase": "^5.3.1",
        "casbin": "^5.27.1",
        "cookie-parser": "^1.4.4",
        "cors": "^2.8.5",
        "csv-parse": "^5.5.2",
        "dotenv": "^10.0.0",
        "express": "^4.16.4",
        "express-bearer-token": "^2.4.0",
        "express-openapi-validator": "^3.9.1",
        "firebase": "^8.2.1",
        "firebase-admin": "^10.1.0",
        "form-data": "^4.0.0",
        "inversify": "^5.1.1",
        "js-yaml": "^3.3.0",
        "jsonwebtoken": "^8.5.1",
        "moment": "^2.29.1",
        "moment-timezone": "^0.5.46",
        "node-jose": "^2.2.0",
        "nodemailer": "^6.7.5",
        "ono": "^5.0.1",
        "openapi-sampler": "^1.0.0-beta.15",
        "otp-generator": "^4.0.0",
        "otp-without-db": "^1.0.4",
        "prisma": "^5.4.2",
        "reflect-metadata": "^0.1.13",
        "swagger-ui-express": "^4.0.2",
        "uuid": "^8.3.2",
        "winston": "^3.2.1"
    },
    "devDependencies": {
        "@apidevtools/swagger-cli": "^4.0.4",
        "@openapitools/openapi-generator-cli": "^2.7.0",
        "@scheme-verge-inc/firebase-authenticator": "1.0.5",
        "@supercharge/promise-pool": "^1.6.0",
        "@types/bcrypt": "^5.0.0",
        "@types/google-spreadsheet": "^3.0.2",
        "@types/jest": "^26.0.19",
        "@types/jsonwebtoken": "^8.5.0",
        "@types/node-jose": "^1.1.13",
        "@types/nodemailer": "^6.4.4",
        "@types/supertest": "^2.0.10",
        "@types/uuid": "^8.3.0",
        "@typescript-eslint/eslint-plugin": "^4.12.1-alpha.1",
        "@typescript-eslint/parser": "^4.12.1-alpha.1",
        "chai": "^4.2.0",
        "chai-as-promised": "^7.1.1",
        "copyfiles": "^2.4.1",
        "dtsgenerator": "^3.6.0",
        "eslint": "^7.17.0",
        "eslint-config-airbnb-base": "^14.0.0",
        "eslint-config-prettier": "^7.1.0",
        "eslint-plugin-import": "^2.17.2",
        "eslint-plugin-prettier": "^3.3.1",
        "google-spreadsheet": "^3.1.15",
        "jest": "^26.6.3",
        "jest-environment-node": "^26.6.2",
        "jest-html-reporter": "^3.3.0",
        "jest-junit": "^12.0.0",
        "jest-mock-extended": "^1.0.13",
        "mocha": "^7.1.1",
        "npm-watch": "^0.7.0",
        "openapi-examples-validator": "^4.3.1",
        "prettier": "^2.2.1",
        "supertest": "^6.0.1",
        "ts-jest": "^26.4.4",
        "ts-node": "^10.9.1",
        "tsc-watch": "^4.2.9",
        "typescript": "^4.1.3"
    }
}
